/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package id.co.meda.apit.visual.form;

import id.co.meda.apit.enggine.penilaian.khusus.perikanan.ToolsPenilaianIkan;
import id.co.meda.apit.visual.controller.ControlFrmEditPendapatanIkan;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Arrays;
import java.util.EventObject;
import java.util.List;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author PT. Databumi Indonesia
 */
public class FrmEditPendapatanPerikanan extends javax.swing.JDialog {
    
    ControlFrmEditPendapatanIkan control = new ControlFrmEditPendapatanIkan();
    
    /**
     * Creates new form FrmPendapatanPerikanan
     */
    public FrmEditPendapatanPerikanan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inisiasiAwal();
    }
    
    public void inisiasiAwal()
    {
       
       this.tablePenangkapan.setEnabled(false);
       this.btnTambahPenangkapan.setEnabled(false);
       this.tabbedPaneIkan.setEnabled(false);
       
       this.tablePembudidayaan.setModel(control.getModelTable("",false)); //false karena pembudidayaan
       this.tablePenangkapan.setModel(control.getModelTable("",true));//true karena penangkapan
       
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbNmWp2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNop = new javax.swing.JFormattedTextField();
        tabbedPaneIkan = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnTambahPenangkapan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePenangkapan = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePembudidayaan = new javax.swing.JTable();
        btnTambahPembudidayaan = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        labelNama = new javax.swing.JLabel();

        lbNmWp2.setBackground(new java.awt.Color(255, 255, 255));
        lbNmWp2.setForeground(new java.awt.Color(255, 0, 0));
        lbNmWp2.setText("-");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Form Edit Pendapatan");

        jLabel1.setText("NOP");

        try {
            txtNop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.##.###.###.###-####.#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNopActionPerformed(evt);
            }
        });
        txtNop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNopKeyPressed(evt);
            }
        });

        btnTambahPenangkapan.setText("Tambah");
        btnTambahPenangkapan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahPenangkapanActionPerformed(evt);
            }
        });

        tablePenangkapan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablePenangkapan);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTambahPenangkapan)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTambahPenangkapan)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneIkan.addTab("Penangkapan Ikan", jPanel1);

        tablePembudidayaan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablePembudidayaan);

        btnTambahPembudidayaan.setText("Tambah");
        btnTambahPembudidayaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahPembudidayaanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTambahPembudidayaan)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTambahPembudidayaan)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneIkan.addTab("Pembudidayaan Ikan", jPanel2);

        jLabel2.setText("Nama  Perusahaan");

        labelNama.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPaneIkan)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNop, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(labelNama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelNama))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabbedPaneIkan)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNopActionPerformed

    private void txtNopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNopKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            
            String nop = txtNop.getText().replace(".", "").replace("-","");
            boolean cekNop = control.cekNop(nop);
            
            if(cekNop)
            {
                this.tablePenangkapan.setEnabled(true);
                this.btnTambahPenangkapan.setEnabled(true);
                this.tabbedPaneIkan.setEnabled(true);
                
                this.labelNama.setText(ToolsPenilaianIkan.getPendataan(nop).getSpopIkan().getSpop().getNamaWp());
                
               //isi Table
                this.tablePembudidayaan.setModel(control.getModelTable(nop,false)); //false karena pembudidayaan
                this.tablePenangkapan.setModel(control.getModelTable(nop,true));//true karena penangkapan
                this.tablePembudidayaan.setRowHeight(35);
                this.tablePenangkapan.setRowHeight(35);
                 TableColumn columnView = tablePenangkapan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePenangkapan));
                 
                 TableColumn columnView2 = tablePembudidayaan.getColumnModel().getColumn(4);
                 columnView2.setCellRenderer(new ButtonsRenderer());
                 columnView2.setCellEditor(new ButtonsEditor(tablePembudidayaan));
                 
                 TableColumn columnDelete = tablePenangkapan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePenangkapan));
                 
                 TableColumn columnDelete2 = tablePembudidayaan.getColumnModel().getColumn(5);
                 columnDelete2.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete2.setCellEditor(new ButtonsEditorDelete(tablePembudidayaan));
                
                
            }else
            {
                JOptionPane.showMessageDialog(this, "NOP yang anda masukkan tidak terdaftar", "Info Pendapatan", JOptionPane.INFORMATION_MESSAGE, null);
                txtNop.setText("");
            }
                      
        
           
       }
    }//GEN-LAST:event_txtNopKeyPressed

    private void btnTambahPenangkapanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahPenangkapanActionPerformed
        // TODO add your handling code here:
        final String nop = txtNop.getText().replace(".", "").replace("-","");
     
      /* 
     * @param isPenangkapan : true untuk penangkapan, false untuk pembudidayaan
     * @param isEditMode : true jika untuk edit, false jika ingin menambah data
     */
        FrmPendapatanPerikanan perikanan = new FrmPendapatanPerikanan(new JFrame(),true,false,true,nop);
        perikanan.setVisible(true);
        
        perikanan.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosed(WindowEvent e)
        {
            
                tablePenangkapan.setModel(control.getModelTable(nop,true));//true karena penangkapan
                tablePenangkapan.setRowHeight(35);
                
                
                
                 TableColumn columnView = tablePenangkapan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePenangkapan));
                 
                
                 TableColumn columnDelete = tablePenangkapan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePenangkapan));
                 
                 
        }
        });
        
        
        
    }//GEN-LAST:event_btnTambahPenangkapanActionPerformed

    private void btnTambahPembudidayaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahPembudidayaanActionPerformed
        // TODO add your handling code here:
         final String nop = txtNop.getText().replace(".", "").replace("-","");
         /* 
     * @param isPenangkapan : true untuk penangkapan, false untuk pembudidayaan
     * @param isEditMode : true jika untuk edit, false jika ingin menambah data
     */
        FrmPendapatanPerikanan perikanan = new FrmPendapatanPerikanan(new JFrame(),true,false,false,nop);
        perikanan.setVisible(true);
         perikanan.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosed(WindowEvent e)
        {
           
                tablePembudidayaan.setModel(control.getModelTable(nop,false));//false karena penmbudidayaan
                tablePembudidayaan.setRowHeight(35);
                
                 TableColumn columnView = tablePembudidayaan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePembudidayaan));
                 
                
                 TableColumn columnDelete = tablePembudidayaan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePembudidayaan));
                
                 
        }
        });
          
    }//GEN-LAST:event_btnTambahPembudidayaanActionPerformed

    
  
    
    
    
    private void editTrigger(String namaIkan)
    {
       final String nop = txtNop.getText().replace(".", "").replace("-","");
        
        int indexTab = this.tabbedPaneIkan.getSelectedIndex();
        
        if(indexTab == 0)
        {
        FrmPendapatanPerikanan perikanan = new FrmPendapatanPerikanan(new JFrame(),true,true,true,nop,namaIkan);
        perikanan.setVisible(true); 
        perikanan.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosed(WindowEvent e)
        {
            
                tablePenangkapan.setModel(control.getModelTable(nop,true));//true karena penangkapan
                tablePenangkapan.setRowHeight(35);
                 TableColumn columnView = tablePenangkapan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePenangkapan));
                 
                
                 TableColumn columnDelete = tablePenangkapan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePenangkapan));
        }
        });
        
        
        }else if(indexTab == 1)
        {
        FrmPendapatanPerikanan perikanan = new FrmPendapatanPerikanan(new JFrame(),true,true,true,nop,namaIkan);
        perikanan.setVisible(true);
         perikanan.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosed(WindowEvent e)
        {
           
                tablePembudidayaan.setModel(control.getModelTable(nop,false));//false karena penmbudidayaan
                tablePembudidayaan.setRowHeight(35);
                
                 TableColumn columnView = tablePembudidayaan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePembudidayaan));
                 
                
                 TableColumn columnDelete = tablePembudidayaan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePembudidayaan));
                
                 
        }
        });
        }
    }
    
    
    private void deleteTrigger(String namaIkan)
    {
        String nop = txtNop.getText().replace(".", "").replace("-","");
        int indexTab = this.tabbedPaneIkan.getSelectedIndex();
        
        if(indexTab == 0)
        {
            control.delete(nop, namaIkan,"Penangkapan Ikan");
            tablePenangkapan.setModel(control.getModelTable(nop,true));//true karena penangkapan
                tablePenangkapan.setRowHeight(35);
                 TableColumn columnView = tablePenangkapan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePenangkapan));
                 
                
                 TableColumn columnDelete = tablePenangkapan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePenangkapan));
                 
        }else if(indexTab == 1)
        {
            control.delete(nop, namaIkan,"Pembudidayaan Ikan");
            tablePembudidayaan.setModel(control.getModelTable(nop,false));//false karena penmbudidayaan
                tablePembudidayaan.setRowHeight(35);
                
                 TableColumn columnView = tablePembudidayaan.getColumnModel().getColumn(4);
                 columnView.setCellRenderer(new ButtonsRenderer());
                 columnView.setCellEditor(new ButtonsEditor(tablePembudidayaan));
                 
                
                 TableColumn columnDelete = tablePembudidayaan.getColumnModel().getColumn(5);
                 columnDelete.setCellRenderer(new ButtonsRendererDelete());
                 columnDelete.setCellEditor(new ButtonsEditorDelete(tablePembudidayaan));
        }
        
        
        
        
    }
    
   //...............UNTUK RENDER BUTTON TABLE......................//
    
  //-----------untuk edit---------------//  
    
  class ButtonsPanelEdit extends JPanel {
    public final List<JButton> buttons = Arrays.asList(new JButton("Edit"));
    public ButtonsPanelEdit() {
        super();
        setOpaque(false);
        for(JButton b: buttons) {
            b.setFocusable(false);
            b.setRolloverEnabled(false);
            add(b);
        }
    }
//     @Override public void updateUI() {
//         super.updateUI();
//     }
}
    
class ButtonsRenderer extends ButtonsPanelEdit implements TableCellRenderer {
    public ButtonsRenderer() {
        super();
        setName("Table.cellRenderer");
    }
    @Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        this.setBackground(isSelected?table.getSelectionBackground():table.getBackground());
        return this;
    }
}
class ButtonsEditor extends ButtonsPanelEdit implements TableCellEditor {
    transient protected ChangeEvent changeEvent = null;

    public ButtonsEditor(final JTable table) {
        super();
        //---->
        //DEBUG: view button click -> control key down + edit button(same cell) press -> remain selection color
        MouseListener ml = new MouseAdapter() {
            @Override public void mousePressed(MouseEvent e) {
                ButtonModel m = ((JButton)e.getSource()).getModel();
                if(m.isPressed() && table.isRowSelected(table.getEditingRow()) && e.isControlDown()) {
                    setBackground(table.getBackground());
                }
            }
        };
        buttons.get(0).addMouseListener(ml);
        //<----

        buttons.get(0).addActionListener(new ActionListener() {
            @Override public void actionPerformed(ActionEvent e) {
                int row = table.convertRowIndexToModel(table.getEditingRow());
                Object o = table.getModel().getValueAt(row, 0);
                //manggil Spop sesuai Nop yang dipilih dan kode editnya (ingat: 1 edit, 2 hapus)
               editTrigger(o.toString());
                fireEditingStopped();
            }

        });

        addMouseListener(new MouseAdapter() {
            @Override public void mousePressed(MouseEvent e) {
                fireEditingStopped();
            }
        });
    }
    @Override public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        this.setBackground(table.getSelectionBackground());
        return this;
    }
    @Override public Object getCellEditorValue() {
        return "";
    }

    //Copid from AbstractCellEditor
    //protected EventListenerList listenerList = new EventListenerList();
    //transient protected ChangeEvent changeEvent = null;
    @Override public boolean isCellEditable(EventObject e) {
        return true;
    }
    @Override public boolean shouldSelectCell(EventObject anEvent) {
        return true;
    }
    @Override public boolean stopCellEditing() {
        fireEditingStopped();
        return true;
    }
    @Override public void cancelCellEditing() {
        fireEditingCanceled();
    }
    @Override public void addCellEditorListener(CellEditorListener l) {
        listenerList.add(CellEditorListener.class, l);
    }
    @Override public void removeCellEditorListener(CellEditorListener l) {
        listenerList.remove(CellEditorListener.class, l);
    }
    public CellEditorListener[] getCellEditorListeners() {
        return listenerList.getListeners(CellEditorListener.class);
    }
    protected void fireEditingStopped() {
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for(int i = listeners.length-2; i>=0; i-=2) {
            if(listeners[i]==CellEditorListener.class) {
                // Lazily create the event:
                if(changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((CellEditorListener)listeners[i+1]).editingStopped(changeEvent);
            }
        }
    }
    protected void fireEditingCanceled() {
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for(int i = listeners.length-2; i>=0; i-=2) {
            if(listeners[i]==CellEditorListener.class) {
                // Lazily create the event:
                if(changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((CellEditorListener)listeners[i+1]).editingCanceled(changeEvent);
            }
        }
    }
}    
  
 //------------------------------------------------------//  

//-----------untuk dekete---------------//  
    
  class ButtonsPanelDelete extends JPanel {
    public final List<JButton> buttons = Arrays.asList(new JButton("Delete"));
    public ButtonsPanelDelete() {
        super();
        setOpaque(false);
        for(JButton b: buttons) {
            b.setFocusable(false);
            b.setRolloverEnabled(false);
            add(b);
        }
    }
//     @Override public void updateUI() {
//         super.updateUI();
//     }
}
    
class ButtonsRendererDelete extends ButtonsPanelDelete implements TableCellRenderer {
    public ButtonsRendererDelete() {
        super();
        setName("Table.cellRenderer");
    }
    @Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        this.setBackground(isSelected?table.getSelectionBackground():table.getBackground());
        return this;
    }
}
class ButtonsEditorDelete extends ButtonsPanelDelete implements TableCellEditor {
    transient protected ChangeEvent changeEvent = null;

    public ButtonsEditorDelete(final JTable table) {
        super();
        //---->
        //DEBUG: view button click -> control key down + edit button(same cell) press -> remain selection color
        MouseListener ml = new MouseAdapter() {
            @Override public void mousePressed(MouseEvent e) {
                ButtonModel m = ((JButton)e.getSource()).getModel();
                if(m.isPressed() && table.isRowSelected(table.getEditingRow()) && e.isControlDown()) {
                    setBackground(table.getBackground());
                }
            }
        };
        buttons.get(0).addMouseListener(ml);
        //<----

        buttons.get(0).addActionListener(new ActionListener() {
            @Override public void actionPerformed(ActionEvent e) {
                int row = table.convertRowIndexToModel(table.getEditingRow());
                Object o = table.getModel().getValueAt(row, 0);
                
                deleteTrigger(o.toString());
                
                //manggil Spop sesuai Nop yang dipilih dan kode editnya (ingat: 1 edit, 2 hapus)
               fireEditingStopped();
            }

        });

        addMouseListener(new MouseAdapter() {
            @Override public void mousePressed(MouseEvent e) {
                fireEditingStopped();
            }
        });
    }
    @Override public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        this.setBackground(table.getSelectionBackground());
        return this;
    }
    @Override public Object getCellEditorValue() {
        return "";
    }

    //Copid from AbstractCellEditor
    //protected EventListenerList listenerList = new EventListenerList();
    //transient protected ChangeEvent changeEvent = null;
    @Override public boolean isCellEditable(EventObject e) {
        return true;
    }
    @Override public boolean shouldSelectCell(EventObject anEvent) {
        return true;
    }
    @Override public boolean stopCellEditing() {
        fireEditingStopped();
        return true;
    }
    @Override public void cancelCellEditing() {
        fireEditingCanceled();
    }
    @Override public void addCellEditorListener(CellEditorListener l) {
        listenerList.add(CellEditorListener.class, l);
    }
    @Override public void removeCellEditorListener(CellEditorListener l) {
        listenerList.remove(CellEditorListener.class, l);
    }
    public CellEditorListener[] getCellEditorListeners() {
        return listenerList.getListeners(CellEditorListener.class);
    }
    protected void fireEditingStopped() {
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for(int i = listeners.length-2; i>=0; i-=2) {
            if(listeners[i]==CellEditorListener.class) {
                // Lazily create the event:
                if(changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((CellEditorListener)listeners[i+1]).editingStopped(changeEvent);
            }
        }
    }
    protected void fireEditingCanceled() {
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for(int i = listeners.length-2; i>=0; i-=2) {
            if(listeners[i]==CellEditorListener.class) {
                // Lazily create the event:
                if(changeEvent == null) {
                    changeEvent = new ChangeEvent(this);
                }
                ((CellEditorListener)listeners[i+1]).editingCanceled(changeEvent);
            }
        }
    }
}    
  
 //------------------------------------------------------//  
//................................................................................//
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTambahPembudidayaan;
    private javax.swing.JButton btnTambahPenangkapan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelNama;
    private javax.swing.JLabel lbNmWp2;
    private javax.swing.JTabbedPane tabbedPaneIkan;
    private javax.swing.JTable tablePembudidayaan;
    private javax.swing.JTable tablePenangkapan;
    private javax.swing.JFormattedTextField txtNop;
    // End of variables declaration//GEN-END:variables
}
